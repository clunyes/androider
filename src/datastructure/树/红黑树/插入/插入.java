package datastructure.树.红黑树.插入;

public class 插入 {
    /**
     * 红黑树插入.md
     * 插入操作包括两部分工作：一查找插入的位置；二插入后自平衡。查找插入的父结点很简单，跟查找操作区别不大：
     *
     * 从根结点开始查找；
     * 若根结点为空，那么插入结点作为根结点，结束。
     * 若根结点不为空，那么把根结点作为当前结点；
     * 若当前结点为null，返回当前结点的父结点，结束。
     * 若当前结点key等于查找key，那么该key所在结点就是插入结点，更新结点的值，结束。
     * 若当前结点key大于查找key，把当前结点的左子结点设置为当前结点，重复步骤4；
     * 若当前结点key小于查找key，把当前结点的右子结点设置为当前结点，重复步骤4
     */
    /**
     * 插入位置已经找到，把插入结点放到正确的位置就可以啦，但插入结点是应该是什么颜色呢？
     * 答案是红色。理由很简单，红色在父结点（如果存在）为黑色结点时，
     * 红黑树的黑色平衡没被破坏，不需要做自平衡操作。但如果插入结点是黑色，
     * 那么插入位置所在的子树黑色结点总是多1，必须做自平衡。
     *
     *
     */
}
