package android.动态化.热修复.不同方案;

public class andfix {
    /**
     * 他的思想完全来源于Xposed框架，完美诠释了AOP编程，这里用到最核心的知识点就是在native层获取到指定方法的结构体，
     * 然后改变他的nativeFunc字段值，而这个值就是可以指定这个方法对应的native函数指针，
     * 所以先从Java层跳到native层，改变指定方法的nativeFunc值，然后在改变之后的函数中调用Java层的回调即可。实现了方法的拦截功能。
     *
     */
    /**
     * 优点：从上面可以看到这个框架的优点在于轻巧便捷，集成成本低，维护性强。
     * 局限性：从上面的代码分析可以看到这个框架的局限性还是很多的，特别是他只能修复对应已经存在的方法，
     * 比如现在我想增加一个方法肯定不行的，如果想给修复方法增加参数信息也是不可以的，这个局限性就非常大了。
     * 还有一个局限性就是只能进行代码修复，资源是无法做到的。所以从这里可以看到这个框架更偏重于方法的热修复操作。
     */
}
